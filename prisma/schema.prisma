generator client {
  provider = "prisma-client-js"
}

datasource db {
 provider     = "mysql"
  url          = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  avatarUrl String?
  answer    Answer[]
  favorite  Favorite[]
  tweets    Tweet[]
}

model Tweet {
  id        Int        @id @default(autoincrement())
  liked     Boolean
  content   String
  tweetImg  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int
  answer    Answer[]
  favorite  Favorite[]
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@index([userId])
}

model Answer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  answer    String
  userId    Int
  tweetid   Int
  tweet     Tweet    @relation(fields: [tweetid], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  @@index([tweetid])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  tweetid   Int
  tweet     Tweet    @relation(fields: [tweetid], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  @@index([tweetid])
}
